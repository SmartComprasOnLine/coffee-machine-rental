# Error log configuration
error_log /var/log/nginx/error.log debug;
access_log /var/log/nginx/access.log;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream backend {
    server app:3000;
    keepalive 32;
}

server {
    listen 80 default_server;
    server_name _;

    # Compression
    gzip on;
    gzip_types text/plain application/json;
    gzip_min_length 1000;

    # Client body size
    client_max_body_size 1M;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Buffer size
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Debug logging for troubleshooting
    error_log /var/log/nginx/host.error.log debug;
    access_log /var/log/nginx/host.access.log combined buffer=512k flush=1m;

    location / {
        # Debug logging
        error_log /var/log/nginx/api.error.log debug;
        access_log /var/log/nginx/api.access.log combined buffer=512k flush=1m;

        # Proxy settings
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @handle_502;
    }

    location @handle_502 {
        default_type application/json;
        return 502 '{"error": "Bad Gateway", "message": "Application server is not responding"}';
    }
}
